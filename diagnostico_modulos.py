#!/usr/bin/env python3
"""
Script de diagn√≥stico para testar os m√≥dulos educacionais
"""

import sys
import os
sys.path.append('/workspaces/algoritmos-visualizador')

def testar_modulos():
    print("üîç Iniciando diagn√≥stico dos m√≥dulos educacionais...")

    try:
        from modulos_integrados import modulos_integrados
        print("‚úÖ Importa√ß√£o do m√≥dulo modulos_integrados: SUCESSO")

        # Testar carregamento de cada m√≥dulo
        for i in range(4):
            print(f"\nüìö Testando M√≥dulo {i+1}...")
            try:
                conteudo = modulos_integrados.carregar_conteudo_modulo(i)
                if "erro" in conteudo:
                    print(f"‚ùå Erro no m√≥dulo {i+1}: {conteudo['erro']}")
                else:
                    arquivos = conteudo.get("arquivos", {})
                    print(f"‚úÖ M√≥dulo {i+1} carregado: {len(arquivos)} arquivos encontrados")

                    # Mostrar alguns arquivos como exemplo
                    for nome_arquivo, info in list(arquivos.items())[:3]:
                        if isinstance(info, dict) and "conteudo" in info:
                            tamanho = len(info["conteudo"])
                            print(f"   üìÑ {nome_arquivo}: {tamanho} caracteres")
                        else:
                            print(f"   ‚ùå {nome_arquivo}: erro no carregamento")

            except Exception as e:
                print(f"‚ùå Erro ao carregar m√≥dulo {i+1}: {e}")

        print("\nüéâ Diagn√≥stico conclu√≠do!")

    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")

    except Exception as e:
        print(f"‚ùå Erro geral: {e}")

if __name__ == "__main__":
    testar_modulos()
