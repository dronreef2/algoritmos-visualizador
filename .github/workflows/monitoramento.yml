name: Monitoramento Inteligente

on:
  schedule:
    # Executa a cada 6 horas para monitoramento frequente
    - cron: '0 */6 * * *'
  workflow_dispatch: # Permite execu√ß√£o manual
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/monitoramento.yml'

jobs:
  health-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: Executar Monitoramento Completo
      run: |
        echo "üîç Iniciando monitoramento autom√°tico..."
        python monitor.py
      env:
        CI: true
        GITHUB_ACTIONS: true
    
    - name: Verifica√ß√£o de Fallback - Streamlit App
      if: failure()
      run: |
        echo "üîÑ Executando verifica√ß√£o de fallback..."
        response=$(curl -s -o /dev/null -w "%{http_code}" -L --connect-timeout 10 --max-time 30 https://algoritmos-visualizador.streamlit.app/ || echo "000")
        echo "üìä Response code: $response"
        if [ "$response" = "200" ]; then
          echo "‚úÖ Streamlit App est√° online (HTTP $response)"
        elif [ "$response" = "000" ]; then
          echo "‚ö†Ô∏è Streamlit App: Problema de conectividade (n√£o pode resolver DNS ou conectar)"
        else
          echo "‚ö†Ô∏è Streamlit App: Resposta inesperada (HTTP $response)"
        fi
        echo "‚ÑπÔ∏è Nota: Este √© um fallback - o monitoramento principal usa retry logic"
    
    - name: Generate Daily Report
      if: always()
      run: |
        echo "üìã RELAT√ìRIO DI√ÅRIO - $(date +'%Y-%m-%d')"
        echo "=================================="
        echo "‚úÖ Monitoramento autom√°tico executado"
        echo "üîÑ Pr√≥xima verifica√ß√£o: $(date -d '+1 day' +'%Y-%m-%d 09:00 UTC')"
        echo "üìä Para detalhes completos, consulte os logs acima"
